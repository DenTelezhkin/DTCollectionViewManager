fastlane_version "1.98.0"

lane :test_ios15 do
  scan(devices: ["iPhone 13 Pro Max (15.5)"], scheme: 'Tests-iOS')
end

lane :test_ios16 do
  scan(devices: ["iPhone 14 Pro (16.0)"], scheme: 'Tests-iOS')
end

lane :test_tvos15 do
  scan(device: "Apple TV (15.4)", scheme: 'Tests-tvOS')
end

lane :test_tvos16 do
  scan(device: "Apple TV (16.0)", scheme: 'Tests-tvOS')
end

lane :pod_lint do
  sh "bundle exec pod repo update"
  pod_lib_lint(allow_warnings: true, verbose: true)
end

lane :test_catalyst do
  scan(catalyst_platform: "macos", scheme: 'Tests-iOS', prelaunch_simulator: false, disable_slide_to_type: false)
end

lane :generate_code_coverage do
  slather(
    proj: "DTCollectionViewManager.xcodeproj",
    scheme: "DTCollectionViewManager",
    verbose: true,
    cobertura_xml: true
  )
end

lane :release do |params|
  version = params[:version]

  abort "You must specify a version in semver format." if version.nil? || version.scan(/\d+\.\d+\.\d+(-\w+\.\d+)?/).length == 0

  puts "Setting Framework version"
  increment_version_number_in_plist(
      version_number: version,
      target: "DTCollectionViewManager"
  )

  Dir.chdir("..") do

    puts "Updating podspec."
    filename = "DTCollectionViewManager.podspec"
    contents = File.read(filename)
    contents.gsub!(/s\.version\s*=\s"\d+\.\d+\.\d+(-\w+\.\d)?"/, "s.version      = \"#{version}\"")
    File.open(filename, 'w') { |file| file.puts contents }

    puts "Updating changelog."
    changelog_filename = "CHANGELOG.md"
    changelog = File.read(changelog_filename)
    changelog.gsub!(/# Next/, "# Next\n\n## [#{version}](https://github.com/DenTelezhkin/DTCollectionViewManager/releases/tag/#{version})")
    File.open(changelog_filename, 'w') { |file| file.puts changelog }

    puts "Comitting, tagging, and pushing."
    message = "Releasing version #{version}."
    sh "git add --all && git commit -m '#{message}'"
    sh "git tag #{version} -m '#{message}'"
    sh "git push --follow-tags"

    puts "Updating Specs repo"
    sh "bundle exec pod repo update"

    puts "Pushing to CocoaPods trunk."
    sh "bundle exec pod trunk push DTCollectionViewManager.podspec --allow-warnings"

    puts "Pushing as a GitHub Release."
    fastlane_require 'octokit'
    stripped_changelog = changelog.split(/^## /)[1].split("\n")[1..-1].join("\n").strip
    client = Octokit::Client.new(netrc: true)
    client.create_release('DenTelezhkin/DTCollectionViewManager',
                     version,
                     name: version,
                     body: stripped_changelog)
  end
end
